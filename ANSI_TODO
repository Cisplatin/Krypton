ansi integration with stream cipher (seed?)
assert des key ver
update generated to work with different seed
save key
add to README availibilities
make a stream cipher module
fix RC4 bug

#include <stdio.h>                                                              
#include "Ciphers/RC4.h"                                                        
                                                                                
int main() {                                                                    
    // Our message, key and nonce are defined here.                             
    BinStr message = ASCII_to_BinStr("Jet fuel can't melt steel beams.");       
    BinStr key     = ASCII_to_BinStr("@I[u*/7W");                               
    BinStr nonce   = ASCII_to_BinStr("&a3F");                                   
                                                                                
    // We now create the BlockCipher struct and encrypt in CTR mode.            
    StreamCipher RC4 = RC4_initialize(key);                                     
    BinStr cipher = StreamEncrypt(message, NULL, RC4);                          
                                                                                
    // We now decrypt the cipher text                                           
    BinStr decrypted = StreamDecrypt(cipher, NULL, RC4);                        
                                                                                
    // We can print out the message and the decrypted message in binary         
    printf("My original message was:\n");                                       
    printBin(message); printf("\n");                                            
    printf("My cipher text was:\n");                                            
    printBin(cipher); printf("\n");                                             
    printf("My decrypted message was:\n");                                      
    printBin(decrypted); printf("\n");                                          
                                                                                
    // Time for garbage collection                                              
    destroy_BinStr(message);                                                    
    destroy_BinStr(key);                                                        
    destroy_BinStr(cipher);                                                     
    destroy_BinStr(decrypted);                                                  
    RC4_destroy(RC4);                                                           
                                                                                
    return 0;                                                                   
}               
